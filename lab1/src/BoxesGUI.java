import java.awt.*;import javax.swing.JComponent;import javax.swing.JFrame;import javax.swing.JPanel;import javax.swing.JSlider;import javax.swing.SwingUtilities;import javax.swing.event.ChangeEvent;import javax.swing.event.ChangeListener;public class BoxesGUI extends JComponent implements Runnable, ChangeListener {	/**	 * Slider2GUI - a simple swing GUI with a slider. Eric McCreath 2019	 */	JFrame jframe;	JSlider jslider;	public BoxesGUI() {		SwingUtilities.invokeLater(this);	}	public static void main(String[] args) {		new BoxesGUI();	}	public Dimension getPreferredSize() {		return new Dimension(200, 200);	}	public void run() {		jframe = new JFrame("BoxesGUI");		jframe.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);		// make the main panel		JPanel mainpanel = new JPanel();		mainpanel.setLayout(new BorderLayout());		mainpanel.add(this, BorderLayout.CENTER);		// add panel to jframe and make viewable		jframe.getContentPane().add(mainpanel);		jframe.setVisible(true);		jframe.pack();	}	@Override	public void stateChanged(ChangeEvent e) {		repaint();	}	@Override	/*	 * Xiran Yan (Siya)	 * 2020/8/10	 */	protected void paintComponent(Graphics graph) {		super.paintComponent(graph);		Graphics2D g = (Graphics2D) graph;		Dimension dim = this.getSize();		// fill the background		g.setColor(Color.white);		g.fillRect(0, 0, dim.width, dim.height);		//conculate the rect largest size		int size = Math.min(dim.width,dim.height);		g.setColor(Color.BLACK);		g.setStroke(new BasicStroke(1.0f));		// draw the rect		for(int i=size-10;i>0;i=i-10) {//i is the long of the rect,both side reduce 5, totally reduce 10 for width or height			if(size>=10){//max panel high or wid must >= 10				g.drawRect((dim.width - i) / 2, (dim.height - i) / 2, i, i);			}		}	}}