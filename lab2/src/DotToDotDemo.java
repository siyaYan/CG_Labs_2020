import java.awt.Graphics2D;import java.awt.geom.Ellipse2D;import java.awt.geom.Path2D;import java.awt.geom.Point2D;import javax.swing.JFrame;import javax.swing.JTabbedPane;import javax.swing.SwingUtilities;public class DotToDotDemo implements Runnable {	/**	 * DotToDotDemo - A demo which draws dots between points to form a path of lines. 	 * Eric McCreath 2015, 2019 - GPL	 */	/**	 * Curvedraw - A Curve control by 3 points.	 * @author Xiran Yan	 * @uid u7167582	 */	JFrame jframe;	public DotToDotDemo() {		SwingUtilities.invokeLater(this);	}	public static void main(String[] args) {		new DotToDotDemo();	}	public void run() {		jframe = new JFrame("Splines");		jframe.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);		JTabbedPane tab = new JTabbedPane();		tab.addTab("Dot-To-Dot", new CurveDraw(3, new Spline() {			// drawCurve - draw the "curve" bye connecting the control points			/**			 * @author Xiran Yan			 * @uid u7167582			 */			@Override			void drawCurve(Point2D.Double[] p, Graphics2D g) {				/*calculate the c0,c1,c2,c3,c4,c5 based on the P0(u=0),P1(u=0.5),P2(u=1)				* fx(u)=c0*u^2+c1*U+c2;				* fy(u)=c3*u^2+c4*U+c5;				*/				double c0 = 2 * p[2].x - 4 * p[1].x + 2 * p[0].x;				double c1 = 4 * p[1].x - p[2].x - 3 * p[0].x;				double c2 = p[0].x;				double c3 = 2 * p[2].y - 4 * p[1].y + 2 * p[0].y;				double c4 = 4 * p[1].y - p[2].y - 3 * p[0].y;				double c5 = p[0].y;				for (int i = 0; i < p.length-2 ; i++) {					for (double u = 0.0; u <= 1.0; u += 0.001) {						double x = c0 * u * u + c1 * u + c2;						double y = c3 * u * u + c4 * u + c5;						g.fillRect((int) x, (int) y, 1, 1);					}				}			}		}));		jframe.getContentPane().add(tab);		jframe.setVisible(true);		jframe.pack();	}}